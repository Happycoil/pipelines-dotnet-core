# ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

variables:
  buildConfiguration: 'Release'
  artifactName: 'drop'
  webAppName: 'tmr-sample-app'

stages:
- stage: Infrastructure
  jobs:
   - job: BuildInfrastructure
     pool:
       vmImage: 'Ubuntu-16.04'
     continueOnError: false
     steps:
     - task: AzureResourceManagerTemplateDeployment@3
       inputs:
         deploymentScope: 'Resource Group'
         ConnectedServiceName: 'tmr-msdn'
         action: 'Create Or Update Resource Group'
         resourceGroupName: 'sample-app-rg'
         location: 'West Europe'
         templateLocation: 'URL of the file'
         csmFileLink: 'https://github.com/Azure/azure-quickstart-templates/blob/master/101-webapp-basic-windows/azuredeploy.json'
         csmParametersFileLink: 'https://github.com/Azure/azure-quickstart-templates/blob/master/101-webapp-basic-windows/azuredeploy.parameters.json'
         overrideParameters: |
           "webAppName": {
               "value": "$(webAppName)"
           }
         deploymentMode: 'Incremental'

- stage: Build
  jobs:
  - job: Build
    pool:
      vmImage: 'Ubuntu-16.04'
    continueOnError: false
    steps:
    - task: DotNetCoreCLI@2
      inputs:
        command: build
        projects: '**/*.csproj'
        arguments: '--configuration $(buildConfiguration)'
    - task: DotNetCoreCLI@2
      inputs:
        command: publish
        arguments: '--configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)'
        zipAfterPublish: true
    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: $(artifactName)

- stage: Deploy
  jobs:
  - deployment: Deploy
    pool:
      vmImage: 'Ubuntu-16.04'
    environment: 'SampleWebApp-prod'
    strategy:
     runOnce:
       deploy:
         steps:
         - download: none
         - task: DownloadBuildArtifacts@0
           inputs:
              artifactName: $(artifactName)
              buildType: 'current'
              downloadType: 'single'
              downloadPath: '$(System.ArtifactsDirectory)'
         - task: AzureWebApp@1
           inputs:
             azureSubscription: 'tmr-msdn'
             appType: webApp
             appName: '$(webAppName)'
             package: $(Build.ArtifactStagingDirectory)/**/*.zip