{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
      "webAppName": {
        "type": "string",
        "metadata": {
          "description": "Base name of the resource such as web app name and app service plan"
        },
        "minLength": 2
      },
      "sku":{
        "type": "string",
        "defaultValue" : "S1",
        "metadata": {
          "description": "The SKU of App Service Plan, by default is Standard S1"
        }
      },
      "location": {
        "type": "string",
        "defaultValue": "[resourceGroup().location]",
        "metadata": {
          "description": "Location for all resources"
        }
      }
    },
    "variables": {
      "webAppPortalName": "[parameters('webAppName')]",
      "appServicePlanName": "[concat('AppServicePlan-', parameters('webAppName'))]"
    },
    "resources": [
      {
        "apiVersion": "2018-02-01",
        "type": "Microsoft.Web/serverfarms",
        "kind": "app",
        "name": "[variables('appServicePlanName')]",
        "location": "[parameters('location')]",
        "properties": {},
        "dependsOn": [],
        "sku": {
          "name": "[parameters('sku')]"
        }
      },
      {
        "apiVersion": "2018-11-01",
        "type": "Microsoft.Web/sites",
        "kind": "app",
        "name": "[variables('webAppPortalName')]",
        "location": "[parameters('location')]",
        "properties": {
          "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]"
        },
        "dependsOn": [
          "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]"
        ]
      },
      {
        "apiVersion": "2015-04-01",
        "name": "[concat(variables('appServicePlanName'), '-', resourceGroup().name)]",
        "type": "Microsoft.Insights/autoscalesettings",
        "location": "[parameters('location')]",
        "tags": {
          "[concat('hidden-link:', resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName')))]": "Resource",
          "displayName": "AutoScaleSettings"
        },
        "dependsOn": [
          "[variables('appServicePlanName')]"
        ],
        "properties": {
          "profiles": [
            {
              "name": "Default",
              "capacity": {
                "minimum": 1,
                "maximum": 2,
                "default": 1
              },
              "rules": [
                {
                  "metricTrigger": {
                    "metricName": "CpuPercentage",
                    "metricResourceUri": "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]",
                    "timeGrain": "PT1M",
                    "statistic": "Average",
                    "timeWindow": "PT10M",
                    "timeAggregation": "Average",
                    "operator": "GreaterThan",
                    "threshold": 80.0
                  },
                  "scaleAction": {
                    "direction": "Increase",
                    "type": "ChangeCount",
                    "value": 1,
                    "cooldown": "PT10M"
                  }
                },
                {
                  "metricTrigger": {
                    "metricName": "CpuPercentage",
                    "metricResourceUri": "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]",
                    "timeGrain": "PT1M",
                    "statistic": "Average",
                    "timeWindow": "PT1H",
                    "timeAggregation": "Average",
                    "operator": "LessThan",
                    "threshold": 60.0
                  },
                  "scaleAction": {
                    "direction": "Decrease",
                    "type": "ChangeCount",
                    "value": 1,
                    "cooldown": "PT1H"
                  }
                }
              ]
            }
          ],
          "enabled": false,
          "name": "[concat(variables('appServicePlanName'), '-', resourceGroup().name)]",
          "targetResourceUri": "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]"
        }
      },
      {
        "apiVersion": "2015-04-01",
        "name": "[concat('ServerErrors ', variables('webAppPortalName'))]",
        "type": "Microsoft.Insights/alertrules",
        "location": "[parameters('location')]",
        "dependsOn": [
          "[variables('webAppPortalName')]"
        ],
        "tags": {
          "[concat('hidden-link:', resourceId('Microsoft.Web/sites', variables('webAppPortalName')))]": "Resource",
          "displayName": "ServerErrorsAlertRule"
        },
        "properties": {
          "name": "[concat('ServerErrors ', variables('webAppPortalName'))]",
          "description": "[concat(variables('webAppPortalName'), ' has some server errors, status code 5xx.')]",
          "isEnabled": false,
          "condition": {
            "odata.type": "Microsoft.Azure.Management.Insights.Models.ThresholdRuleCondition",
            "dataSource": {
              "odata.type": "Microsoft.Azure.Management.Insights.Models.RuleMetricDataSource",
              "resourceUri": "[resourceId('Microsoft.Web/sites', variables('webAppPortalName'))]",
              "metricName": "Http5xx"
            },
            "operator": "GreaterThan",
            "threshold": 0.0,
            "windowSize": "PT5M"
          },
          "action": {
            "odata.type": "Microsoft.Azure.Management.Insights.Models.RuleEmailAction",
            "sendToServiceOwners": true,
            "customEmails": []
          }
        }
      },
      {
        "apiVersion": "2015-04-01",
        "name": "[concat('ForbiddenRequests ', variables('webAppPortalName'))]",
        "type": "Microsoft.Insights/alertrules",
        "location": "[parameters('location')]",
        "dependsOn": [
          "[variables('webAppPortalName')]"
        ],
        "tags": {
          "[concat('hidden-link:', resourceId('Microsoft.Web/sites', variables('webAppPortalName')))]": "Resource",
          "displayName": "ForbiddenRequestsAlertRule"
        },
        "properties": {
          "name": "[concat('ForbiddenRequests ', variables('webAppPortalName'))]",
          "description": "[concat(variables('webAppPortalName'), ' has some requests that are forbidden, status code 403.')]",
          "isEnabled": false,
          "condition": {
            "odata.type": "Microsoft.Azure.Management.Insights.Models.ThresholdRuleCondition",
            "dataSource": {
              "odata.type": "Microsoft.Azure.Management.Insights.Models.RuleMetricDataSource",
              "resourceUri": "[resourceId('Microsoft.Web/sites', variables('webAppPortalName'))]",
              "metricName": "Http403"
            },
            "operator": "GreaterThan",
            "threshold": 0,
            "windowSize": "PT5M"
          },
          "action": {
            "odata.type": "Microsoft.Azure.Management.Insights.Models.RuleEmailAction",
            "sendToServiceOwners": true,
            "customEmails": []
          }
        }
      },
      {
        "apiVersion": "2015-04-01",
        "name": "[concat('CPUHigh ', variables('appServicePlanName'))]",
        "type": "Microsoft.Insights/alertrules",
        "location": "[parameters('location')]",
        "dependsOn": [
          "[variables('appServicePlanName')]"
        ],
        "tags": {
          "[concat('hidden-link:', resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName')))]": "Resource",
          "displayName": "CPUHighAlertRule"
        },
        "properties": {
          "name": "[concat('CPUHigh ', variables('appServicePlanName'))]",
          "description": "[concat('The average CPU is high across all the instances of ', variables('appServicePlanName'))]",
          "isEnabled": false,
          "condition": {
            "odata.type": "Microsoft.Azure.Management.Insights.Models.ThresholdRuleCondition",
            "dataSource": {
              "odata.type": "Microsoft.Azure.Management.Insights.Models.RuleMetricDataSource",
              "resourceUri": "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]",
              "metricName": "CpuPercentage"
            },
            "operator": "GreaterThan",
            "threshold": 90,
            "windowSize": "PT15M"
          },
          "action": {
            "odata.type": "Microsoft.Azure.Management.Insights.Models.RuleEmailAction",
            "sendToServiceOwners": true,
            "customEmails": []
          }
        }
      },
      {
        "apiVersion": "2015-04-01",
        "name": "[concat('LongHttpQueue ', variables('appServicePlanName'))]",
        "type": "Microsoft.Insights/alertrules",
        "location": "[parameters('location')]",
        "dependsOn": [
          "[variables('appServicePlanName')]"
        ],
        "tags": {
          "[concat('hidden-link:', resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName')))]": "Resource",
          "displayName": "AutoScaleSettings"
        },
        "properties": {
          "name": "[concat('LongHttpQueue ', variables('appServicePlanName'))]",
          "description": "[concat('The HTTP queue for the instances of ', variables('appServicePlanName'), ' has a large number of pending requests.')]",
          "isEnabled": false,
          "condition": {
            "odata.type": "Microsoft.Azure.Management.Insights.Models.ThresholdRuleCondition",
            "dataSource": {
              "odata.type": "Microsoft.Azure.Management.Insights.Models.RuleMetricDataSource",
              "resourceUri": "[concat(resourceGroup().id, '/providers/Microsoft.Web/serverfarms/', variables('appServicePlanName'))]",
              "metricName": "HttpQueueLength"
            },
            "operator": "GreaterThan",
            "threshold": 100.0,
            "windowSize": "PT5M"
          },
          "action": {
            "odata.type": "Microsoft.Azure.Management.Insights.Models.RuleEmailAction",
            "sendToServiceOwners": true,
            "customEmails": []
          }
        }
      },
      {
        "apiVersion": "2015-05-01",
        "name": "[concat('AppInsights', variables('webAppPortalName'))]",
        "type": "Microsoft.Insights/components",
        "location": "[parameters('location')]",
        "dependsOn": [
          "[variables('webAppPortalName')]"
        ],
        "tags": {
          "[concat('hidden-link:', resourceId('Microsoft.Web/sites', variables('webAppPortalName')))]": "Resource",
          "displayName": "AppInsightsComponent"
        },
        "properties": {
          "ApplicationId": "[variables('webAppPortalName')]"
        }
      }
    ]
  }